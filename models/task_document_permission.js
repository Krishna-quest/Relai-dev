const mongoose = require('mongoose');
const Schema = mongoose.Schema;

// Create Schema
const TaskDocumentPermissionSchema = new Schema({
  //should be auto generated by mongodb
  tdps_permission_id: {
    type: String,
  },
  tdps_customer_id: {
    type: Schema.Types.ObjectId,
    ref: "customers"
  },
  tdps_service_provider_id: {
    type: Schema.Types.ObjectId,
    ref: "serviceProviders"
  },
  tdps_document_id: {
    type: Schema.Types.ObjectId,
    ref: "task_upload_docs"
  },
  tdps_view_permission: {
    type: String,
    enum: ['yes', 'no'],
    default: 'no'
  },
  tdps_download_permission: {
    type: String,
    enum: ['yes', 'no'],
    default: 'no'
  },
  tdps_status: {
    type: String,
    enum: ['pending', 'accept', 'reject'],
    default: 'pending'
  },
  tdps_comment: { type: String },
  tdps_self_attested: {
    type: String,
    enum: ['yes', 'no'],
    default: 'no'
  },
  tdps_water_mark_added: {
    type: String,
    enum: ['yes', 'no'],
    default: 'no'
  },
  tdps_stamp: {
    type: String,
    enum: ['yes', 'no'],
    default: 'no'
  },
  tdps_created_at: {
    type: Date,
    default: Date.now
  },
  tdps_updated_at: {
    type: Date
  },
  tdps_deleted_at: { type: Date },
  tdps_deleted: {
    type: String,
    enum: ['0', '1']
  },
  tdps_is_active_user_flag: {
    type: String,
    enum: ['buyer', 'seller', 'renovator'],
  },
})
module.exports = task_docs_permission = mongoose.model('task_docs_permission', DocumentPermissionSchema);